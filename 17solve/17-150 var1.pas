// Автор В.Н. Шубинкин
{В файле с данными последняя строка - пустая (как в Демо-2022).
Это создаёт небольшие неудобства при считывании данных.
Варианты решения проблемы:
1)var1 Использовать метод ReadLines и преобразовать каждую строку в число.
Такой подход безразличен к наличию пустой строки в конце файла
и не требует дополнительных манипуляций с файлом.
После этого можно обработать последовательность или преобразовать её в массив.
Использование массива неэффективно по используемой памяти,
но эффективность в этой задаче и не требуется.
2)var2 Второй подход - подсмотреть количество строк с числами в текстовом файле
и воспользоваться циклом с заданным числом итераций loop/for.
Этот метод эффективнее, так как вместо массива использует две переменные типа integer.
Также эффективно можно было бы обработать последовательность,
но подозреваю, что эта струткура данных не изучается в подавляющем большинстве школ.
3)Можно удалить пустую строку и воспользоваться признаком конца файла EOF.
4)В пустой строке вписать число, большее любого элемента последовательности,
и применить цикл с предусловием вида while a <= 10000 do}
##
var a := ReadLines('17-1.txt').Select(t -> t.ToInteger).ToArray;
var pair_count := 0;
var minS := 20000;
for var i := 0 to a.High - 1 do
  if (a[i] mod 7 = 0) and (a[i + 1] mod 17 <> 0)
      or (a[i + 1] mod 7 = 0) and (a[i] mod 17 <> 0) then
  begin
    pair_count += 1;
    minS := min(minS, a[i] + a[i + 1])    
  end;
println(pair_count, minS)